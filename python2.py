# 제2장 파이썬 기본 문법


'''2.1 문자 처리'''
# 프로그램 첫 문장에 "# codint: euc-kr"문 삽입
# 저장할 때 "UTF-8"모드로 저장


'''2.2 변수'''
a = 7 # 변수 a에 10 할당 
print(a) # 변수 a에 저장된 데이터 출력
a = "Hellow python" # 변수 a에 Hellow python으로 데이터 변경
print(a)
print()

x, y = "파랑", "초록" # x에 파랑 할당, y에 초록 할당
z = x
print(x, y, z)
print()

# "변수 = 값"의 형태로 대입문 작성 -> 변수 생성(선언)과 함께 값 대입됨 (변수에 값 할당할 때 선언 자동으로 이뤄짐)
# [변수 이름] = [데이터] 구조로 작
# 파이썬에서는 변수 타입이 정해져있지 않음 -> 정수형으로 사용했다가 문자열로 바꿀 수 있음

i = 1
print(type(i)) #변수의 유형을 알아보는 예약어 type문
print()


'''2.3 식별자'''
# 식별자는 프로그램 안에 있는 변수와 함수와 같은 요소를 식별하는 이름
# 글자, 숫자, _로 이루어진 문자들의 연속으로 만들어져야 함
# 숫자로 시작할 수 x
# 예약어를 사용할 수 x 
# 특수문자는 사용할 수 x
# 가급적이면 _는 앞뒤에 사용하지 않는 것이 좋음


'''2.4 예약어'''


'''2.5 줄 및 들여쓰기'''
# 파이썬은 다른 언어와 달리 들여쓰기(indent)에 매우 민감
# 파이썬은 '{', '}' 없이 들여쓰기만으로 코드가 수행되는 영역 표시
# 들여쓰기의 공백 수는 공백4칸으로 띄어야 하며, 블록 내 모든 명령문은 들여쓰기해야 함 


'''2.6 연속 줄 선언'''
# 두 개 이상의 문장을 한 줄에 쓸 때
# 여러 문장을 한 줄에 나타낼 경우 세미콜론으로 구분 (권장하지는 x)
i = 5; print(i);
i = 5; print(i)
print()

# 한 명령행이 너무 긴 경우, 백슬래시(\)를 이용하여 구분
i = 10
j = 20
k = 30
tot = i + \
      j + \
      k
print(tot)
print()

# [], {}, () 괄호 안에 포함된 문은 연속 문자 사용할 필요 x


'''2.7 인용문'''
string = '"Python is perfect" is true'
print(string)

string = 'Your father\'s succeeded'
print(string)
print()


'''2.8 주석'''
# 한 줄 주석은 "#" 사용 
# 블록을 지정해서 전체를 주석으로 사용 -> "나 '를 최소 3개씩 사용하는 것 


'''2.9 명령 행 인수'''
# 외부에서 데이터를 집어넣을 때 사용
# 파이썬에서는 sys.argv로 선언
# sys.argv[0]에는 항상 파이썬 프로그램에 연관된 파일명이 풀패스(확장자를 포함한 전체 이름)로 들어감
# srs.argv[1]에는 첫 번째 옵션, sys.argv[2]에는 두 번째 옵션이 들어가며 연속해서 여러 개 선언될 수 있음
# 명령행 옵션과 인수를 구문 분석하는 데 도움이 되며 구분 내역이 1개 이상의 공백을 지정

# python test.py 인수1 인수2 인수3
# c:\python test.py 1 2 3

# sys.argv: 명령 줄 인수 목록
# len(sys.argv): 명령 줄 인수의 수
# sys.argv[0]은 프로그램 즉 스크립트 이름
# 옵션을 주지 않고 실행했을 때 len(sys.argv)는 1 -> 옵션 개수는 항상 최소한 1
# len(sys.argv)에서 1을 빼주어야 실제 옵션 개수 구해짐

import sys # sys를 import해야 함
print('인수의 수:', len(sys.argv), '인수의 수.') # 인수를 아무것도 안줬기 때문에 인수의 수는 1
print('인수 목록:', str(sys.argv)) # 인수를 안줬기 때문에 프로그램 이름 하나만 나옴
print()

# 인수를 1 2 3 줬을 때 
"""
import sys 
print('인수의 수:', len(sys.argv), '인수의 수.') # 인수의 수는 4
print('인수 목록:', str(sys.argv)) # 프로그램 이름, '1', '2', '3' 총 4개 나옴 
i = sys.argv[1] # 문자 1로 들어옴 
j = sys.argv[2]
k = sys.argv[3]
tot = int(i) + int(j) + int(k) # int함수는 문자를 숫자로 바꾸어줌 
print(tot) # 6
"""





